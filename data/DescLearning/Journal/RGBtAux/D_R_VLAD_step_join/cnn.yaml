Main:
    class: 'networks.Descriptor.Main'
    param_class:
        layers_to_train: 'up_to_conv2'
        base_archi: 'Resnet'
        base_archi_param:
            load_imagenet: True
            end_relu: False
            jet_tf: False
            num_layer: 18
            truncated: 3
            unet: True
        agg_method: 'NetVLAD'
        agg_method_param:
            bias: True
            cluster_size: 64
            feature_size: 256
            alpha: 20

Deconv:
    class: 'networks.ResNet.Deconv'
    param_class:
        layers_to_train: 'all'
        size_res_1: 128
        size_res_2: 64
        input_size: 256
        up_factor: 1
        final_activation: 'sig'

Aux:
    class: 'networks.Descriptor.Main'
    param_class:
        agg_method: 'NetVLAD'
        agg_method_param:
            bias: True
            cluster_size: 64
            feature_size: 256
            #load: 'A_depth_64_clusters.pth'
            alpha: 60
        base_archi: 'Alexnet'
        base_archi_param:
            load_imagenet: True
            end_relu: False
            batch_norm: False
            jet_tf: True
            jet_tf_param:
                num_embedding: 256
                size_embedding: 3
                trainable: false
                amplitude: 1
                min_value: 0
        layers_to_train: 'all'

Fuse:
    class: 'networks.FeatAggregation.Concat'
    param_class:
        aux_ratio: 1.0
        main_ratio: 1.0
        norm: False

init_weights:
    Main:
        feature: '../../RGB/R_VLAD/Main_feature.pth'
        descriptor: '../../RGB/R_VLAD/Main_descriptor.pth'
#    Deconv:
#        deconv_1: 'Deconv_deconv_1.pth'
#        deconv_2: 'Deconv_deconv_2.pth'
#        deconv_3: 'Deconv_deconv_3.pth'
